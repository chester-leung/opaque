// This file is part of the interface between Spark SQL and the SGX enclave --
// the "trusted-untrusted interface," or TUIX.

namespace edu.berkeley.cs.rise.opaque.tuix;

table EncryptedBlock {
    num_rows:uint;
    // When decrypted, this should contain a Rows object at its root
    enc_rows:[ubyte];
}

table EncryptedBlocks {
    blocks:[EncryptedBlock];
    log:LogEntryChain;
    log_mac:[Mac]; 
    /* all_outputs_mac:[Mac]; */
}

table SortedRuns {
    runs:[EncryptedBlocks];
}

table LogEntry {
    ecall:int; // ecall executed
    snd_pid:int; // partition where ecall was executed - to be deprecated
    rcv_pid:int; // partition of subsequent ecall - to be deprecated
    job_id:int; // Number of ecalls executed in this enclave before this ecall - to be deprecated
    num_macs:int; // Number of EncryptedBlock's in this EncryptedBlocks - checked during runtime
    mac_lst:[ubyte]; // List of all MACs. one from each EncryptedBlocks - checked during runtime
    mac_lst_mac:[ubyte]; // MAC(mac_lst) - checked during runtime
    /* input_macs:[Mac]; // List of all EncryptedBlocks' all_outputs_mac's */
}

table LogEntryChain {
    curr_entries:[LogEntry];
    past_entries:[LogEntry]; // To be deprecated in favor of the line below
    // past_entries:[Crumb];
    num_past_entries:[int];
}

table Mac {
    mac:[ubyte];
}

// Contains information about an ecall, which will be pieced together during post verfication to verify the DAG
// A crumb representing an ecall is created at the next ecall
table Crumb {
    input_macs:[Mac]; // List of all EncryptedBlocks all_outputs_mac's
    all_outputs_mac:Mac; // MAC over all outputs of ecall from which this EncryptedBlocks came from
    ecall:string; // Ecall executed
    log_mac:Mac; // MAC over the LogEntryChain from this EncryptedBlocks
}



